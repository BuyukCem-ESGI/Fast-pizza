{"remainingRequest":"/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/node_modules/babel-loader/lib/index.js!/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/node_modules/eslint-loader/index.js??ref--14-0!/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/src/services/auth.service.js","dependencies":[{"path":"/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/src/services/auth.service.js","mtime":1643558746664},{"path":"/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/babel.config.js","mtime":1642281992204},{"path":"/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvYnV5dWtjZW0vRG9jdW1lbnRzL1Byb2plY3QvRVNHSS9GYXN0LXBpenphL3Z1ZWpzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2J1eXVrY2VtL0RvY3VtZW50cy9Qcm9qZWN0L0VTR0kvRmFzdC1waXp6YS92dWVqcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwoKdmFyIEF1dGhTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBBdXRoU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBdXRoU2VydmljZSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQXV0aFNlcnZpY2UsIFt7CiAgICBrZXk6ICJsb2dpbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9naW4odXNlcikgewogICAgICBjb25zb2xlLmxvZygic2lnbmluICIsIHVzZXIpOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIGF4aW9zLnBvc3QoImh0dHBzOi8vbG9jYWxob3N0OjQ0My9hdXRoZW50aWNhdGlvbl90b2tlbiIsIHsKICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgICAgcGFzc3dvcmQ6IHVzZXIucGFzc3dvcmQKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyIiwgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuZGF0YSkpOwogICAgICAgICAgICByZXNvbHZlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiAiU3VjY2VzcyIKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7CiAgICAgICAgICAgIHJlamVjdCh7CiAgICAgICAgICAgICAgbWVzc2FnZTogIkludmFsaWQgZW1haWwgb3IgcGFzc3dvcmQiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlamVjdCh7CiAgICAgICAgICAgIG1lc3NhZ2U6ICJJbnZhbGlkIGVtYWlsIG9yIHBhc3N3b3JkIgogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImxvZ291dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlZ2lzdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3Rlcih1c2VyKSB7CiAgICAgIGNvbnNvbGUubG9nKCJyZWdpc3RlciArKyIpOwogICAgICBjb25zb2xlLmxvZyh1c2VyKTsKICAgICAgY29uc29sZS5sb2coJy9hdXRoL3JlZ2lzdGVyJyk7CiAgICAgIHJldHVybiBheGlvcy5wb3N0KCdodHRwczovL2xvY2FsaG9zdDo0NDMvYXV0aC9yZWdpc3RlcicsIHsKICAgICAgICBlbWFpbDogdXNlci5lbWFpbCwKICAgICAgICBmaXJzdG5hbWU6IHVzZXIuZmlyc3ROYW1lLAogICAgICAgIGxhc3RuYW1lOiB1c2VyLmxhc3ROYW1lLAogICAgICAgIHBob25lTnVtYmVyOiB1c2VyLnBob25lTnVtYmVyLAogICAgICAgIHBhc3N3b3JkOiB1c2VyLnBhc3N3b3JkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiAiUmVnaXN0ZXIgc3VjY2VzcyI7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gIkVycm9yIHdoZW4gcmVnaXN0ZXJpbmciOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBBdXRoU2VydmljZTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgbmV3IEF1dGhTZXJ2aWNlKCk7"},{"version":3,"sources":["/Users/buyukcem/Documents/Project/ESGI/Fast-pizza/vuejs/src/services/auth.service.js"],"names":["axios","AuthService","user","console","log","Promise","resolve","reject","post","email","password","then","response","status","localStorage","setItem","JSON","stringify","data","message","catch","removeItem","firstname","firstName","lastname","lastName","phoneNumber"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,W;;;;;;;WACF,eAAMC,IAAN,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnCP,QAAAA,KAAK,CACLQ,IADA,CACK,4CADL,EACmD;AAChDC,UAAAA,KAAK,EAAEP,IAAI,CAACO,KADoC;AAEhDC,UAAAA,QAAQ,EAAER,IAAI,CAACQ;AAFiC,SADnD,EAKAC,IALA,CAKK,UAAAC,QAAQ,EAAI;AACd,cAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,YAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACM,IAAxB,CAA7B;AACAZ,YAAAA,OAAO,CAAC;AAACa,cAAAA,OAAO,EAAE;AAAV,aAAD,CAAP;AACH;;AACD,cAAIP,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBN,YAAAA,MAAM,CAAC;AAACY,cAAAA,OAAO,EAAE;AAAV,aAAD,CAAN;AACH;AACJ,SAbA,EAaEC,KAbF,CAaQ,YAAM;AACZb,UAAAA,MAAM,CAAC;AAACY,YAAAA,OAAO,EAAE;AAAV,WAAD,CAAN;AACF,SAfA;AAgBJ,OAjBM,CAAP;AAkBH;;;WACD,kBAAS;AACLL,MAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB;AACH;;;WAED,kBAASnB,IAAT,EAAe;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,aAAOJ,KAAK,CAACQ,IAAN,CAAW,qCAAX,EAAkD;AACrDC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KADyC;AAErDa,QAAAA,SAAS,EAAEpB,IAAI,CAACqB,SAFqC;AAGrDC,QAAAA,QAAQ,EAAEtB,IAAI,CAACuB,QAHsC;AAIrDC,QAAAA,WAAW,EAAExB,IAAI,CAACwB,WAJmC;AAKrDhB,QAAAA,QAAQ,EAAER,IAAI,CAACQ;AALsC,OAAlD,EAMJC,IANI,CAMC,YAAM;AACV,eAAO,kBAAP;AACH,OARM,EAQJS,KARI,CAQE,YAAM;AACX,eAAO,wBAAP;AACH,OAVM,CAAP;AAWH;;;;;;AAGL,eAAe,IAAInB,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n    login(user) {\n        console.log(\"signin \", user)\n        return new Promise((resolve, reject) => {\n             axios\n            .post(\"https://localhost:443/authentication_token\", {\n                email: user.email,\n                password: user.password\n            })\n            .then(response => {\n                if (response.status === 200) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\n                    resolve({message: \"Success\"});\n                }\n                if (response.status === 401) {\n                    reject({message: \"Invalid email or password\"})\n                }\n            }).catch(() => {\n               reject({message: \"Invalid email or password\"})\n            });\n        });\n    }\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n    register(user) {\n        console.log(\"register ++\")\n        console.log(user)\n        console.log('/auth/register')\n\n        return axios.post('https://localhost:443/auth/register', {\n            email: user.email,\n            firstname: user.firstName,\n            lastname: user.lastName,\n            phoneNumber: user.phoneNumber,\n            password: user.password\n        }).then(() => {\n            return \"Register success\";\n        }).catch(() => {\n            return \"Error when registering\";\n        });\n    }\n}\n\nexport default new AuthService();\n"]}]}