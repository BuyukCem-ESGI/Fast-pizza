{"remainingRequest":"/home/ris/cours/ProjetVue/Fast-pizza/vuejs/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ris/cours/ProjetVue/Fast-pizza/vuejs/src/components/Register.vue?vue&type=style&index=0&id=7bf3755a&scoped=true&lang=css","dependencies":[{"path":"/home/ris/cours/ProjetVue/Fast-pizza/vuejs/src/components/Register.vue","mtime":1639945471427},{"path":"/home/ris/cours/ProjetVue/Fast-pizza/vuejs/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ris/cours/ProjetVue/Fast-pizza/vuejs/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/home/ris/cours/ProjetVue/Fast-pizza/vuejs/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ris/cours/ProjetVue/Fast-pizza/vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ris/cours/ProjetVue/Fast-pizza/vuejs/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmJ0bi1wcmltYXJ5IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMxQUMwNzMgIWltcG9ydGFudDsKICAgIGJvcmRlci1jb2xvcjogIzFBQzA3MyAhaW1wb3J0YW50OwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICBmb250LXNpemU6IDIwcHgKICB9CiAgLnJvdyB7CiAgICBwYWRkaW5nLXRvcDogMTB2aAogIH0KICAuY2FyZC1oZWFkZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzFBQzA3MwogIH0KICAudGl0bHRlIHsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgY29sb3I6ICNmZmY7CiAgfQo="},{"version":3,"sources":["/home/ris/cours/ProjetVue/Fast-pizza/vuejs/src/components/Register.vue"],"names":[],"mappings":";EAiIE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB;EACA,CAAC,CAAC,CAAC,EAAE;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb","file":"/home/ris/cours/ProjetVue/Fast-pizza/vuejs/src/components/Register.vue","sourceRoot":"","sourcesContent":["<template>\n<div class=\"row\">\n  <div class=\"col-md-4\"></div>\n  <div class=\"col-md-4\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h2 class=\"titlte\" >REGISTER</h2>\n        </div>\n        <div class=\"card-body\">\n          <Form @submit=\"handleRegister\" :validation-schema=\"schema\">\n              <div v-if=\"!successful\">\n                <div class=\"form-group\">\n                  <label for=\"username\">Username</label>\n                  <Field name=\"username\" type=\"text\" class=\"form-control\" />\n                  <ErrorMessage name=\"username\" class=\"error-feedback\" />\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <Field name=\"email\" type=\"email\" class=\"form-control\" />\n                  <ErrorMessage name=\"email\" class=\"error-feedback\" />\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"password\">Password</label>\n                  <Field name=\"password\" type=\"password\" class=\"form-control\" />\n                  <ErrorMessage name=\"password\" class=\"error-feedback\" />\n                </div>\n\n                <div class=\"form-group\">\n                  <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\n                    <span\n                      v-show=\"loading\"\n                      class=\"spinner-border spinner-border-sm\"\n                    ></span>\n                    Sign Up\n                  </button>\n                </div>\n              </div>\n            </Form>\n\n      <div\n        v-if=\"message\"\n        class=\"alert\"\n        :class=\"successful ? 'alert-success' : 'alert-danger'\"\n      >\n        {{ message }}\n      </div>\n        </div>\n      </div>\n  </div>\n  <div class=\"col-md-4\"></div>\n</div>\n</template>\n\n<script>\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\n\nexport default {\n  name: \"Register\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage,\n  },\n  data() {\n    const schema = yup.object().shape({\n      username: yup\n        .string()\n        .required(\"Username is required!\")\n        .min(3, \"Must be at least 3 characters!\")\n        .max(20, \"Must be maximum 20 characters!\"),\n      email: yup\n        .string()\n        .required(\"Email is required!\")\n        .email(\"Email is invalid!\")\n        .max(50, \"Must be maximum 50 characters!\"),\n      password: yup\n        .string()\n        .required(\"Password is required!\")\n        .min(6, \"Must be at least 6 characters!\")\n        .max(40, \"Must be maximum 40 characters!\"),\n    });\n\n    return {\n      successful: false,\n      loading: false,\n      message: \"\",\n      schema,\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    },\n  },\n  mounted() {\n    if (this.loggedIn) {\n      this.$router.push(\"/profile\");\n    }\n  },\n  methods: {\n    handleRegister(user) {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n\n      this.$store.dispatch(\"auth/register\", user).then(\n        (data) => {\n          this.message = data.message;\n          this.successful = true;\n          this.loading = false;\n        },\n        (error) => {\n          this.message =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n          this.successful = false;\n          this.loading = false;\n        }\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n  .btn-primary {\n    background-color: #1AC073 !important;\n    border-color: #1AC073 !important;\n    font-weight: bold;\n    font-size: 20px\n  }\n  .row {\n    padding-top: 10vh\n  }\n  .card-header {\n    background-color: #1AC073\n  }\n  .titlte {\n    font-weight: bold;\n    text-align: center;\n    color: #fff;\n  }\n</style>"]}]}